name: .NET Framework Build

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:   

jobs:
  build:
    runs-on: windows-latest

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v4

    # Setup MSBuild
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1

    # Cache NuGet packages
    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.sln') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    # Restore NuGet packages
    - name: Restore NuGet packages
      run: nuget restore WindowsFormsApp/WindowsFormsApp.sln

    # Build the solution using MSBuild
    - name: Build solution
      run: msbuild WindowsFormsApp/WindowsFormsApp.sln /p:Configuration=Release
    
    - name: Verificar se DLL de teste existe
      shell: pwsh
      run: |
          $dllPath = Join-Path "${{ github.workspace }}" "WindowsFormsApp.Tests\bin\Release\WindowsFormsApp.Tests.dll"
          if (Test-Path $dllPath) {
            Write-Host "✔ DLL encontrada: $dllPath"
          } else {
            Write-Error "❌ DLL de teste não encontrada: $dllPath"
            exit 1
          }

    - name: Executar testes com VSTest
      shell: pwsh
      run: |
          $vswhere = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe"
          $vsPath  = & $vswhere -latest -products * -property installationPath
          $vstest  = "$vsPath\Common7\IDE\CommonExtensions\Microsoft\TestWindow\vstest.console.exe"

          $dllPath = Join-Path "${{ github.workspace }}" "WindowsFormsApp.Tests\bin\Release\WindowsFormsApp.Tests.dll"
          Write-Host "Executando testes em: $dllPath"
          & "$vstest" /Platform:x64 $dllPath

