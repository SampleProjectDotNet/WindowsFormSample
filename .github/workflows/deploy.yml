# name: CD - Deploy Windows App

# on:
#   workflow_call:
#     inputs:
#       artifact-name:
#         description: 'Nome do artifact gerado pela etapa de build'
#         required: false
#         default: 'build-output'
#         type: string

# jobs:
#   deploy:
#     runs-on: windows-latest

#     steps:
#       - name: Download package artifact
#         uses: actions/download-artifact@v4
#         with:
#           name: ${{ inputs.artifact-name }}  
#           path: ./artifact

#       # 4. Gerar pacote .nupkg
#       - name: Pack WindowsFormsApp as NuGet package
#         run: |
#           nuget.exe pack WindowsFormsApp/WindowsFormsApp.csproj \
#             -IncludeReferencedProjects \
#             -Properties Configuration=Release \
#             -OutputDirectory ./artifact
#         working-directory: ./

#       # (Opcional) listar conteúdo do artifact
#       - name: List packaged files
#         run: dir .\artifact\*.nupkg /s

#       # 5. Publicar no GitHub Packages
#       - name: Publish package to GitHub Packages
#         run: |
#           dotnet nuget push .\artifact\*.nupkg `
#             --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" `
#             --api-key "${{ secrets.GITHUB_TOKEN }}" `
#             --skip-duplicate
#         shell: powershell

#       # Notificação de sucesso
#       - name: Notify success
#         if: success()
#         run: Write-Host "Upload para GitHub Packages concluído com sucesso!"
#         shell: powershelld
